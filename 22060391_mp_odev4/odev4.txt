import 'package:flutter/material.dart';

void main() => runApp(MyApp());

// StatelessWidget olan MyApp sınıfı, uygulamanın temel yapısını oluşturur.
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Ürün Uygulaması',
      home: ProductPage(), // Ana sayfa olarak ProductPage widget'ını atar.
    );
  }
}

// StatefulWidget olan ProductPage sınıfı, durum yönetimi gerektiren bir widget sağlar.
class ProductPage extends StatefulWidget {
  @override
  _ProductPageState createState() =>
      _ProductPageState(); // Bu widget'ın durumunu yönetecek state sınıfını belirler.
}

// _ProductPageState sınıfı, ProductPage widget'ının durumunu yönetir.
class _ProductPageState extends State<ProductPage> {
  // Ürün bilgilerini içeren bir liste tanımlar.
  final List<Map<String, dynamic>> products = [
    {'name': 'Kazak', 'price': '750₺'},
    {'name': 'Pantolon', 'price': '1200₺'},
    {'name': 'Tişört', 'price': '550₺'},
    {'name': 'Ayakkabı', 'price': '3500₺'},
  ];

  // Seçili ürünün indeksini tutar. Başlangıçta -1, yani hiçbir ürün seçilmemiş.
  int selectedIndex = -1;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Ürün Listesi'), 
        backgroundColor: Colors.lightBlue,
      ),
      body: Column(
        children: [
          // Yatay ListView widget'ı
          Container(
            height: 80, // Yüksekliği 80 olarak ayarlanmış
            child: ListView.builder(
              scrollDirection: Axis.horizontal, // Yatay kaydırma
              itemCount:
                  products.length, // Listede kaç eleman olacağını belirler
              itemBuilder: (context, index) {
                return GestureDetector(
                  onTap: () {
                    setState(() {
                      selectedIndex =
                          index; // Tıklanan ürünün indeksini seçili olarak ayarlar
                    });
                  },
                  child: Container(
                    width: 100, // Ürün kartının genişliği
                    margin: EdgeInsets.all(8.0), // Kenarlardan 8 birim boşluk
                    color: selectedIndex == index
                        ? Colors.blueAccent // Seçili ürün için renk
                        : Colors.grey[300], // Seçili olmayan ürünler için renk
                    child: Center(
                      child: Text(
                        products[index]['name'],
                        style:
                            TextStyle(color: Colors.white),
                      ),
                    ),
                  ),
                );
              },
            ),
          ),
          Expanded(
            // GridView widget'ı
            child: GridView.builder(
              padding: const EdgeInsets.all(
                  8.0), // GridView içinde kenarlardan boşluk bırakır
              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2, // Her satırda 2 sütun olacak
                crossAxisSpacing: 8.0, // Sütunlar arasındaki boşluk
                mainAxisSpacing: 8.0, // Satırlar arasındaki boşluk
              ),
              itemCount: products.length, // GridView öğe sayısı
              itemBuilder: (context, index) {
                return Container(
                  padding: EdgeInsets.all(16.0), // Her ürün kartının iç boşluğu
                  decoration: BoxDecoration(
                    color: selectedIndex == index
                        ? Colors.blueAccent // Seçili ürün için renk
                        : Colors.grey[200], // Seçili olmayan ürün rengi
                    borderRadius:
                        BorderRadius.circular(12.0), // Köşelerin yuvarlatılması
                  ),
                  child: Column(
                    mainAxisAlignment:
                        MainAxisAlignment.center, // İçerikleri ortalar
                    children: [
                      Text(
                        products[index]['name'], // Ürün adı
                        style: TextStyle(
                            fontSize: 18.0,
                            fontWeight:
                                FontWeight.bold), // Yazı boyutu ve kalınlığı
                      ),
                      SizedBox(
                          height: 8.0), // Ürün adı ile fiyat arasında boşluk
                      Text(products[index]['price']), // Ürün fiyatı
                    ],
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
